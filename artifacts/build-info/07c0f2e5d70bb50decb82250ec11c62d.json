{
	"id": "07c0f2e5d70bb50decb82250ec11c62d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Compliance/interfaces/ITREXSuite.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.19;\n\ninterface ITREXSuite {\n    /**\n     * @dev Get the address of the compliance contract.\n     * @return Address of the compliance contract.\n     */\n    function getComplianceContractAddress() external view returns (address);\n\n    /**\n     * @dev Get the address of the identity registry contract.\n     * @return Address of the identity registry contract.\n     */\n    function getIdentityRegistryAddress() external view returns (address);\n\n    /**\n     * @dev Get the address of the claim topics registry contract.\n     * @return Address of the claim topics registry contract.\n     */\n    function getClaimTopicsRegistryAddress() external view returns (address);\n\n    /**\n     * @dev Get the address of the trusted issuers registry contract.\n     * @return Address of the trusted issuers registry contract.\n     */\n    function getTrustedIssuersRegistryAddress() external view returns (address);\n\n    /**\n     * @dev Get the address of the token contract.\n     * @return Address of the token contract.\n     */\n    function getTokenAddress() external view returns (address);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Compliance/interfaces/ITREXSuite.sol": {
				"ITREXSuite": {
					"abi": [
						{
							"inputs": [],
							"name": "getClaimTopicsRegistryAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getComplianceContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getIdentityRegistryAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedIssuersRegistryAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getClaimTopicsRegistryAddress()": {
								"details": "Get the address of the claim topics registry contract.",
								"returns": {
									"_0": "Address of the claim topics registry contract."
								}
							},
							"getComplianceContractAddress()": {
								"details": "Get the address of the compliance contract.",
								"returns": {
									"_0": "Address of the compliance contract."
								}
							},
							"getIdentityRegistryAddress()": {
								"details": "Get the address of the identity registry contract.",
								"returns": {
									"_0": "Address of the identity registry contract."
								}
							},
							"getTokenAddress()": {
								"details": "Get the address of the token contract.",
								"returns": {
									"_0": "Address of the token contract."
								}
							},
							"getTrustedIssuersRegistryAddress()": {
								"details": "Get the address of the trusted issuers registry contract.",
								"returns": {
									"_0": "Address of the trusted issuers registry contract."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getClaimTopicsRegistryAddress()": "32a19002",
							"getComplianceContractAddress()": "036fca89",
							"getIdentityRegistryAddress()": "bec44a46",
							"getTokenAddress()": "10fe9ae8",
							"getTrustedIssuersRegistryAddress()": "c45db37d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getClaimTopicsRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getComplianceContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIdentityRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuersRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getClaimTopicsRegistryAddress()\":{\"details\":\"Get the address of the claim topics registry contract.\",\"returns\":{\"_0\":\"Address of the claim topics registry contract.\"}},\"getComplianceContractAddress()\":{\"details\":\"Get the address of the compliance contract.\",\"returns\":{\"_0\":\"Address of the compliance contract.\"}},\"getIdentityRegistryAddress()\":{\"details\":\"Get the address of the identity registry contract.\",\"returns\":{\"_0\":\"Address of the identity registry contract.\"}},\"getTokenAddress()\":{\"details\":\"Get the address of the token contract.\",\"returns\":{\"_0\":\"Address of the token contract.\"}},\"getTrustedIssuersRegistryAddress()\":{\"details\":\"Get the address of the trusted issuers registry contract.\",\"returns\":{\"_0\":\"Address of the trusted issuers registry contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Compliance/interfaces/ITREXSuite.sol\":\"ITREXSuite\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Compliance/interfaces/ITREXSuite.sol\":{\"keccak256\":\"0x0f8d32c47b93f20cbf6a7ebf31a70b1a273d2dfab452d24d98a1fb1e8eed0b5c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://409b5ec7857b3451ba1eb7abcb323d2d91457f5a798c433dc2e4b9bb3bf62c25\",\"dweb:/ipfs/QmX754ghK8ALvgguj3nybGLHdpDZ4ULK9fhtgU1eY3Z3sv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Compliance/interfaces/ITREXSuite.sol": {
				"ast": {
					"absolutePath": "contracts/Compliance/interfaces/ITREXSuite.sol",
					"exportedSymbols": {
						"ITREXSuite": [
							32
						]
					},
					"id": 33,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITREXSuite",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "ITREXSuite",
							"nameLocation": "75:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "92:118:0",
										"text": " @dev Get the address of the compliance contract.\n @return Address of the compliance contract."
									},
									"functionSelector": "036fca89",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getComplianceContractAddress",
									"nameLocation": "224:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "278:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:9:0"
									},
									"scope": 32,
									"src": "215:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "293:132:0",
										"text": " @dev Get the address of the identity registry contract.\n @return Address of the identity registry contract."
									},
									"functionSelector": "bec44a46",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIdentityRegistryAddress",
									"nameLocation": "439:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "491:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:9:0"
									},
									"scope": 32,
									"src": "430:70:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "506:140:0",
										"text": " @dev Get the address of the claim topics registry contract.\n @return Address of the claim topics registry contract."
									},
									"functionSelector": "32a19002",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimTopicsRegistryAddress",
									"nameLocation": "660:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:9:0"
									},
									"scope": 32,
									"src": "651:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "730:146:0",
										"text": " @dev Get the address of the trusted issuers registry contract.\n @return Address of the trusted issuers registry contract."
									},
									"functionSelector": "c45db37d",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuersRegistryAddress",
									"nameLocation": "890:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "948:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:9:0"
									},
									"scope": 32,
									"src": "881:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "963:108:0",
										"text": " @dev Get the address of the token contract.\n @return Address of the token contract."
									},
									"functionSelector": "10fe9ae8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAddress",
									"nameLocation": "1085:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1100:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1126:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1125:9:0"
									},
									"scope": 32,
									"src": "1076:59:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 33,
							"src": "65:1072:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1098:0"
				},
				"id": 0
			}
		}
	}
}